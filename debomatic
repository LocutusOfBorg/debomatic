#!/usr/bin/env python

# Written by Luca Falavigna
# (C) 2007, Luca Falavigna

import os
from ConfigParser import ConfigParser
from re import findall
from sys import exit

conffile = '/etc/debomatic.conf'
defaultopts = ('packagedir', 'distribution')

def parse_options(conffile, defaultopts):
	if not os.path.exists(conffile):
		print ('Configuration file %s does not exist' % conffile)
		sys.exit(0)
	Options.read(conffile)
	for opt in defaultopts:
		if not Options.has_option('default', opt) or \
		not Options.get('default', opt):
			print ('Please set "%s" in %s' % (opt, conffile))

def select_dsc(directory):
	try:
		filelist = os.listdir(directory)
	except:
		print 'Unable to access directory %s' % directory
		exit(1)
	for filename in filelist:
		if os.path.splitext(filename)[1] == '.dsc':
			return filename
	return None

def parse_packages(directory, package):
	try:
		fd = os.open(os.path.join(directory, package), os.O_RDONLY)
	except:
		print 'Unable to open %s' % os.path.join(directory, package)
		exit(1)
	files =findall('\s\w+\s\d+\s(.*)', os.read(fd, os.fstat(fd).st_size))
	files.insert(len(files), package)
	os.close(fd)
	return files

def build_package(directory, packagelist, distribution):
	dscfile = None
	for package in packagelist:
		if os.path.exists(os.path.join(directory, package)):
			src = os.path.join(directory, package)
			dst = os.path.join(directory, 'work', package)
			os.renames(src, dst)
			if not dscfile:
				dscfile = findall('(.*\.dsc$)', dst)
	os.system('pbuilder build ' \
			'--basetgz /var/cache/pbuilder/%(distro)s.tgz ' \
			'--distribution %(distro)s %(dsc)s' % \
			{'distro': distribution, 'dsc': dscfile[0]})
	for package in packagelist:
		if os.path.exists(os.path.join(directory, 'work', package)):
			os.remove(os.path.join(directory, 'work', package))
